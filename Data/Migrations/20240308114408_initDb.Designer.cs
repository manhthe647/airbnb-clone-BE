// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using airbnb_clone_BE.Data;

#nullable disable

namespace airbnb_clone_BE.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240308114408_initDb")]
    partial class initDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("airbnb_clone_BE.Data.Entity.Amenity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AmenityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Amenities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AmenityName = "Wifi",
                            Icon = "430077_fi_wi_wifi_icon.png"
                        },
                        new
                        {
                            Id = 2,
                            AmenityName = "TV",
                            Icon = "172609_tv_icon.png"
                        },
                        new
                        {
                            Id = 3,
                            AmenityName = "Bếp",
                            Icon = "976611_appliances_cook_cooker_kitchen_oven_icon.png"
                        },
                        new
                        {
                            Id = 4,
                            AmenityName = "Máy giặt",
                            Icon = "9132480_washing machine_laundry_cleaning_housekeeping_washing_icon.png"
                        },
                        new
                        {
                            Id = 5,
                            AmenityName = "Chỗ đỗ xe miễn phí tại nơi ở",
                            Icon = "753908_cars_automobile_car_vehicle_icon.png"
                        },
                        new
                        {
                            Id = 6,
                            AmenityName = "Chỗ đỗ xe có thu phí trong khuôn viên",
                            Icon = "751082_parking_car_packing_sign_vehicle_icon.png"
                        },
                        new
                        {
                            Id = 7,
                            AmenityName = "Điều hòa nhiệt độ",
                            Icon = "9035523_snow_outline_icon.png"
                        },
                        new
                        {
                            Id = 8,
                            AmenityName = "Không gian làm việc riêng",
                            Icon = "1250326_desk_lamp_light_table_icon.png"
                        });
                });

            modelBuilder.Entity("airbnb_clone_BE.Data.Entity.Palace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Palaces");
                });

            modelBuilder.Entity("airbnb_clone_BE.Data.Entity.PalaceAmenity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AmenityId")
                        .HasColumnType("int");

                    b.Property<int>("PalaceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PalaceAmenities");
                });
#pragma warning restore 612, 618
        }
    }
}
