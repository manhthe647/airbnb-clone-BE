// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using airbnb_clone_BE.Data;

#nullable disable

namespace airbnb_clone_BE.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240312135839_initDb")]
    partial class initDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("airbnb_clone_BE.Data.Entity.Amenity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AmenityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Amenities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AmenityName = "Wifi",
                            Icon = "430077_fi_wi_wifi_icon.png"
                        },
                        new
                        {
                            Id = 2,
                            AmenityName = "TV",
                            Icon = "172609_tv_icon.png"
                        },
                        new
                        {
                            Id = 3,
                            AmenityName = "Bếp",
                            Icon = "976611_appliances_cook_cooker_kitchen_oven_icon.png"
                        },
                        new
                        {
                            Id = 4,
                            AmenityName = "Máy giặt",
                            Icon = "9132480_washing machine_laundry_cleaning_housekeeping_washing_icon.png"
                        },
                        new
                        {
                            Id = 5,
                            AmenityName = "Chỗ đỗ xe miễn phí tại nơi ở",
                            Icon = "753908_cars_automobile_car_vehicle_icon.png"
                        },
                        new
                        {
                            Id = 6,
                            AmenityName = "Chỗ đỗ xe có thu phí trong khuôn viên",
                            Icon = "751082_parking_car_packing_sign_vehicle_icon.png"
                        },
                        new
                        {
                            Id = 7,
                            AmenityName = "Điều hòa nhiệt độ",
                            Icon = "9035523_snow_outline_icon.png"
                        },
                        new
                        {
                            Id = 8,
                            AmenityName = "Không gian làm việc riêng",
                            Icon = "1250326_desk_lamp_light_table_icon.png"
                        });
                });

            modelBuilder.Entity("airbnb_clone_BE.Data.Entity.Coupon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CouponDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateExpired")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscountValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MaxUsage")
                        .HasColumnType("int");

                    b.Property<int>("TimesUsed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("airbnb_clone_BE.Data.Entity.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FromUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ToUser")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("airbnb_clone_BE.Data.Entity.Palace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte?>("AccommodationType")
                        .HasColumnType("tinyint");

                    b.Property<string>("AddressLine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<byte?>("PalaceType")
                        .HasColumnType("tinyint");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Palaces");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccommodationType = (byte)1,
                            AddressLine = "",
                            City = "Hà Nội",
                            Description = "Khách sạn 5 sao đẳng cấp thế giới",
                            District = "Nam Từ Liêm",
                            IsActive = true,
                            Latitude = 21.007126149125504,
                            Longitude = 105.78321866192687,
                            PalaceType = (byte)5,
                            Price = 6804000.0,
                            Title = "JW Marriott Hotel Hanoi"
                        },
                        new
                        {
                            Id = 2,
                            AccommodationType = (byte)1,
                            AddressLine = "Nghiêm Xuân Yêm",
                            City = "Hà Nội",
                            Description = "Chuỗi khách sạn uy tín, chất lượng số 1 VN, Cơ sở Linh Đàm",
                            District = "Đại Kim",
                            IsActive = true,
                            Latitude = 20.973837575971725,
                            Longitude = 105.82807578105918,
                            PalaceType = (byte)5,
                            Price = 1179360.0,
                            Title = "Khách sạn Mường Thanh Grand Hà Nội"
                        },
                        new
                        {
                            Id = 3,
                            AccommodationType = (byte)1,
                            AddressLine = "Thôn Đại Quang, Ngọc Thanh",
                            City = "Vĩnh Phúc",
                            Description = "Chuỗi khách sạn uy tín, chất lượng số 1 VN, Cơ sở Linh Đàm",
                            District = "Phúc Yên",
                            IsActive = true,
                            Latitude = 21.343690205257751,
                            Longitude = 105.71707285877919,
                            PalaceType = (byte)5,
                            Price = 904000.0,
                            Title = "Flamingo Dai Lai Resort"
                        },
                        new
                        {
                            Id = 4,
                            AccommodationType = (byte)0,
                            AddressLine = "55 Giải Phóng, Đồng Tâm",
                            City = "Hà Nội",
                            Description = "Gần Bách Kinh xâ",
                            District = "Hai Bà Trưng",
                            IsActive = true,
                            Latitude = 21.003443567243497,
                            Longitude = 105.84342799299425,
                            PalaceType = (byte)0,
                            Price = 411000.0,
                            Title = "Nhà trọ khép kín đối diện Bạch Mai"
                        },
                        new
                        {
                            Id = 5,
                            AccommodationType = (byte)0,
                            AddressLine = "Vĩnh Phú",
                            City = "Hà Nội",
                            Description = "View đẹp gần Times City",
                            District = "Hoàng Mai",
                            IsActive = true,
                            Latitude = 20.99415779906403,
                            Longitude = 105.8685235322548,
                            PalaceType = (byte)1,
                            Price = 360000.0,
                            Title = "Căn hộ tầng 22A8 Park Hill 1"
                        });
                });

            modelBuilder.Entity("airbnb_clone_BE.Data.Entity.PalaceAmenity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AmenityId")
                        .HasColumnType("int");

                    b.Property<int>("PalaceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PalaceAmenities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AmenityId = 1,
                            PalaceId = 1
                        },
                        new
                        {
                            Id = 2,
                            AmenityId = 2,
                            PalaceId = 1
                        },
                        new
                        {
                            Id = 3,
                            AmenityId = 3,
                            PalaceId = 1
                        },
                        new
                        {
                            Id = 4,
                            AmenityId = 4,
                            PalaceId = 1
                        },
                        new
                        {
                            Id = 5,
                            AmenityId = 5,
                            PalaceId = 1
                        },
                        new
                        {
                            Id = 6,
                            AmenityId = 7,
                            PalaceId = 1
                        },
                        new
                        {
                            Id = 7,
                            AmenityId = 8,
                            PalaceId = 1
                        },
                        new
                        {
                            Id = 8,
                            AmenityId = 1,
                            PalaceId = 2
                        },
                        new
                        {
                            Id = 9,
                            AmenityId = 2,
                            PalaceId = 2
                        },
                        new
                        {
                            Id = 10,
                            AmenityId = 3,
                            PalaceId = 2
                        },
                        new
                        {
                            Id = 11,
                            AmenityId = 4,
                            PalaceId = 2
                        },
                        new
                        {
                            Id = 12,
                            AmenityId = 5,
                            PalaceId = 2
                        },
                        new
                        {
                            Id = 13,
                            AmenityId = 7,
                            PalaceId = 2
                        },
                        new
                        {
                            Id = 14,
                            AmenityId = 8,
                            PalaceId = 2
                        },
                        new
                        {
                            Id = 15,
                            AmenityId = 1,
                            PalaceId = 3
                        },
                        new
                        {
                            Id = 16,
                            AmenityId = 2,
                            PalaceId = 3
                        },
                        new
                        {
                            Id = 17,
                            AmenityId = 3,
                            PalaceId = 3
                        },
                        new
                        {
                            Id = 18,
                            AmenityId = 4,
                            PalaceId = 3
                        },
                        new
                        {
                            Id = 19,
                            AmenityId = 5,
                            PalaceId = 3
                        },
                        new
                        {
                            Id = 20,
                            AmenityId = 7,
                            PalaceId = 3
                        },
                        new
                        {
                            Id = 21,
                            AmenityId = 1,
                            PalaceId = 4
                        },
                        new
                        {
                            Id = 22,
                            AmenityId = 3,
                            PalaceId = 4
                        },
                        new
                        {
                            Id = 23,
                            AmenityId = 7,
                            PalaceId = 4
                        },
                        new
                        {
                            Id = 24,
                            AmenityId = 2,
                            PalaceId = 5
                        },
                        new
                        {
                            Id = 25,
                            AmenityId = 3,
                            PalaceId = 5
                        },
                        new
                        {
                            Id = 26,
                            AmenityId = 4,
                            PalaceId = 5
                        },
                        new
                        {
                            Id = 27,
                            AmenityId = 6,
                            PalaceId = 5
                        },
                        new
                        {
                            Id = 28,
                            AmenityId = 7,
                            PalaceId = 3
                        },
                        new
                        {
                            Id = 29,
                            AmenityId = 8,
                            PalaceId = 3
                        });
                });

            modelBuilder.Entity("airbnb_clone_BE.Data.Entity.PalaceBathroom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("PalaceId")
                        .HasColumnType("int");

                    b.Property<int?>("PrivateBathroom")
                        .HasColumnType("int");

                    b.Property<int?>("PrivateClosedBathroom")
                        .HasColumnType("int");

                    b.Property<int?>("sharedBathroom")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PalaceBathrooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PalaceId = 1,
                            PrivateClosedBathroom = 2
                        },
                        new
                        {
                            Id = 2,
                            PalaceId = 2,
                            PrivateClosedBathroom = 2
                        },
                        new
                        {
                            Id = 3,
                            PalaceId = 3,
                            PrivateClosedBathroom = 1
                        },
                        new
                        {
                            Id = 4,
                            PalaceId = 4,
                            PrivateClosedBathroom = 1
                        },
                        new
                        {
                            Id = 5,
                            PalaceId = 5,
                            PrivateClosedBathroom = 1
                        });
                });

            modelBuilder.Entity("airbnb_clone_BE.Data.Entity.PalaceCapacity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BedCount")
                        .HasColumnType("int");

                    b.Property<int>("BedroomCount")
                        .HasColumnType("int");

                    b.Property<int>("GuestCount")
                        .HasColumnType("int");

                    b.Property<int>("PalaceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PalaceCapacities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BedCount = 4,
                            BedroomCount = 2,
                            GuestCount = 8,
                            PalaceId = 1
                        },
                        new
                        {
                            Id = 2,
                            BedCount = 2,
                            BedroomCount = 2,
                            GuestCount = 4,
                            PalaceId = 2
                        },
                        new
                        {
                            Id = 3,
                            BedCount = 1,
                            BedroomCount = 1,
                            GuestCount = 2,
                            PalaceId = 3
                        },
                        new
                        {
                            Id = 4,
                            BedCount = 1,
                            BedroomCount = 1,
                            GuestCount = 1,
                            PalaceId = 4
                        },
                        new
                        {
                            Id = 5,
                            BedCount = 2,
                            BedroomCount = 2,
                            GuestCount = 4,
                            PalaceId = 5
                        });
                });

            modelBuilder.Entity("airbnb_clone_BE.Data.Entity.PalaceImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PalaceId")
                        .HasColumnType("int");

                    b.Property<string>("Sort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PalaceImages");
                });

            modelBuilder.Entity("airbnb_clone_BE.Data.Entity.PalaceSecurity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("PalaceId")
                        .HasColumnType("int");

                    b.Property<bool>("hasCamera")
                        .HasColumnType("bit");

                    b.Property<bool>("hasSecurityStaff")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("PalaceSecurities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PalaceId = 1,
                            hasCamera = true,
                            hasSecurityStaff = true
                        },
                        new
                        {
                            Id = 2,
                            PalaceId = 2,
                            hasCamera = true,
                            hasSecurityStaff = true
                        },
                        new
                        {
                            Id = 3,
                            PalaceId = 3,
                            hasCamera = true,
                            hasSecurityStaff = true
                        },
                        new
                        {
                            Id = 4,
                            PalaceId = 4,
                            hasCamera = true,
                            hasSecurityStaff = false
                        },
                        new
                        {
                            Id = 5,
                            PalaceId = 5,
                            hasCamera = true,
                            hasSecurityStaff = true
                        });
                });

            modelBuilder.Entity("airbnb_clone_BE.Data.Entity.PalaceTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("PalaceId")
                        .HasColumnType("int");

                    b.Property<byte?>("Tag")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("PalaceTags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PalaceId = 1,
                            Tag = (byte)1
                        },
                        new
                        {
                            Id = 2,
                            PalaceId = 1,
                            Tag = (byte)3
                        },
                        new
                        {
                            Id = 3,
                            PalaceId = 1,
                            Tag = (byte)4
                        },
                        new
                        {
                            Id = 4,
                            PalaceId = 1,
                            Tag = (byte)5
                        },
                        new
                        {
                            Id = 5,
                            PalaceId = 2,
                            Tag = (byte)3
                        },
                        new
                        {
                            Id = 6,
                            PalaceId = 2,
                            Tag = (byte)4
                        },
                        new
                        {
                            Id = 7,
                            PalaceId = 2,
                            Tag = (byte)5
                        },
                        new
                        {
                            Id = 8,
                            PalaceId = 3,
                            Tag = (byte)0
                        },
                        new
                        {
                            Id = 9,
                            PalaceId = 3,
                            Tag = (byte)1
                        },
                        new
                        {
                            Id = 10,
                            PalaceId = 3,
                            Tag = (byte)3
                        },
                        new
                        {
                            Id = 11,
                            PalaceId = 4,
                            Tag = (byte)4
                        },
                        new
                        {
                            Id = 12,
                            PalaceId = 5,
                            Tag = (byte)3
                        },
                        new
                        {
                            Id = 13,
                            PalaceId = 5,
                            Tag = (byte)4
                        },
                        new
                        {
                            Id = 14,
                            PalaceId = 5,
                            Tag = (byte)5
                        });
                });

            modelBuilder.Entity("airbnb_clone_BE.Data.Entity.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PalaceId")
                        .HasColumnType("int");

                    b.Property<int?>("Star")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("airbnb_clone_BE.Data.Entity.UserFavoritePalace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("PalaceId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserFavoritePalaces");
                });
#pragma warning restore 612, 618
        }
    }
}
